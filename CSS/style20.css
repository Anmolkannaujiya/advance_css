*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body{
    font-family: sans-serif;
}
.container{
    max-width: 1440px;
    border: 2px solid red;
    margin: 100px auto;
    display: grid;
    grid-auto-flow: dense;  

    /* grid-template-columns: 100px 200px 300px; */
    /* grid-template-columns: 33% 33% 33%; */
    /* grid-template-columns: 1fr 1fr 1fr;    */

    /* grid-template-columns: repeat(3,1fr);  */
    /*same as above */
    /* grid-template-columns: 500px repeat(2,1fr); */
    /* if we want the first column to have a fixed width and rest to adjust acoordingly when size increase or decreased in responsiveness */

    /* grid-template-columns: repeat(auto-fit, 200px); */
    /* grid-template-columns: repeat(auto-fill, 200px); */
    grid-template-columns: repeat(auto-fit,minmax(150px,1fr));

    column-gap: 10px;
    row-gap: 10px;
    /* gap: 10px 10px; */
    /* after giving column gap of 50px the grid will go outside screen due to 33% each strech after gap of 50px
        therefore, we will not use px and % which are rigid instead we will use fraction system, eg: 1fr */

    grid-template-rows: 100px 100px;
    grid-auto-rows: 100px;
    /* auto addeded rows to have fixed width of 100px */
    
    /* grid-auto-flow: column;
    grid-auto-columns: 100px; */
} 


/* there are two properties of grid 
    1. grid container's properties
    2. grid items properties */

.item{
    background-color: blue;
    color: wheat;
    padding: 10px;
    border: 2px solid black;
}

.item1{
    /* grid-column-start: 1;
    grid-column-end: 3; */

    /* grid-column: 1 / 3; */
    /* grid-column: 1/span 2; */

    grid-column: 1/-1;
   
    /* grid-row-start: 1;
    grid-row-end: 3; */

    /* grid-row: 1 / 3; */
    grid-row: 1/span 1;
    /* shorthand technique */
}
.item8{
    grid-column: 1/-1;
}